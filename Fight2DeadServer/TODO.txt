TODAY: 
    ADD 4 PLAYER MODE (2h) []
        CLIENT: 
            currently we are in 1v1 mode even when hit 2v2 button 
            -> change the mode when click on different buttons (1v1, 2v2)

            change the lobby -> now we have 4 people (4 lines)
            
            change the choose character -> 
                choose character in 2v2 problems: 
                    the player can only choose 1 character 
                    have a scene where 4 character will appears all at once 
                        -> show with the sliding animation (only in 2v2 mode or maybe both ??) -> CHOOSE THIS ONE 
                        -> when enough player chosen just show that animation/scene and then to the next scene 

                        -> currently we don't have this scene done yet, so first stick with the 1 character chose way 
                    or show the character whenever it showed 

            change the choose map -> 
                currently each people choose a map, but should they :v 
                so only 1 map, the person who choose the faster get's it :v  (apply for both mode)

        SERVER: 
            stuff more players into one room, then that's pretty much it really :v 

    DESIGN THE DATABASE FIRST BEFORE IMPLEMENT IT (1h) [] 

    CREATE A DATABASE FOR STORING PEOPLE'S LOGIN INFO (1h) [] (First decide what to use first maybe: MySql for cross platform)


    tong cong: 5h  

TODO: 
    
    SEND AND HANDLE QUIT MESSAGE WITH THE NEW SYSTEM (4h) [] (THIS CURRENTLY IS DOING FOR 1V1 ONLY)
        quit message have to be TCP  
        any of these scene can have a quit: 
        separate into cases: 
        PREGAME: 
            quit when in a tcp room: -> send to the TCP thread loop 
            client send format: "quit" -> remove from tcp room 
            server send format (send to others in the room): "pid:{},quit" 
            LAN MODE: 
                lobby scene []  
                LAN MODE: 
                    client [] 
                        -> if room owner -> remove the opponent on screen when the opponent quit message arrive 
                        -> else go back to the menu 
                    server [] 

                choose character scene []
                LAN MODE: 
                    client [] -> go back to  
                    server []

                choose map scene scene []
                LAN MODE: 
                    client [] -> go back to  
                    server []

                loading scene  []
        INGAME:
        GLOBAL MODE: 
        LAN MODE: 


        
            quit when in a udp room: -> send to the TCP main loop
            client send format: "rid:{},pid:{},quit"
            server send format (send to others in the room): 
                DON'T KNOW AT THE MOMENT since the client tcp thread as close 
                or we should just ignore it :v 
                when all players gone just remove the goddamn room 

                    game scene  []
                
                
    AFTER ALL THE CHARACTER IS CHOSEN HAVE A SCENE THAT SHOW ALL 4 CHARACTERS (2h) []
    CREATE A MESSAGE HANDLER SYSTEM FOR THE CLIENT AS WELL (1h) [] (Optional)

    UPDATE THE GRADIENT AND THE COLOR OF THE BLACKSTRIP OF THE LOBBY SCENE (1h) []
    -> (CHOOSE CHARACTER, MAP SELECT, LOADING SCREEN)

    IMPLEMENT LAN MODE (2h) [] 

    CHECK NETWORK STATUS OF CLIENTS (2h) [] (Optional)
    
    THE CLIENT WHO WANTS TO JOIN ROOM ON LAN WILL HAVE TO BE ABLE TO SEARCH AND FIND OUT IF THERE IS ANY ROOM SOME HOW (2h) []
        SO THE CLIENT IN LAN MODE HAVE 2 CHOICES: CREATE ROOM OR JOIN ROOM -> 2 DIFFERENT MESSAGE TYPES
    THE CLIENT WHO WANTS TO JOIN ROOM ON GLOBAL THEN IT'S EASIER SINCE THERE WILL ONLY A SINGLE IP (1h) []

    UNIFIED ALL THE ASSETS OF THE SCENES AND CONNECT THEM TO EACH OTHER [] (2h)
    APPLY SSL INTO THE TRANSMISSION [] (2h)
    REGISTER, LOGIN, LOGOUT [] (3h)
    DONG HET TAT CA CAC THREAD O CAC SCENE KIA []
    THE TO NEXT SCENE METHOD ACTUALLY LOOP BACK WHEN IT GET TO THE END -> FIX IT []
    DO SOME PERFORMANCE TEST (using some fake client to check for how many clients could this architecture handle) [] 
    CHECK SOME MULTITHREADING SOLUTION [] 
    ATTACH THE LAN SERVER CODE TO CLIENT  [] 
    LOOK INTO OBJECT POOLING AND FLYWEIGHT PATTERN FOR OPTIMIZE THE FACTORY PATTERN []

    SENDING ANIMATION STATES TO OTHER PLAYERS ?? (SHOULD WE ?)

    ATTACH SOCKET TO THE LOADING SCENE [] (1h) 
    CREATE A BUILD SCRIPT []

    ADD 4 PLAYER MODE [] -> CHANGE THE MENU AS WELL 
    
DONE: 
    CONNECT THE GAME MODE/SETTINGS WITH THE GAME MENU (1h) [X]
    CONNECT THE LOGIN/REGISTER WITH THE REST OF THE SCENES (1h) [X] (kinda) :v 
    GLOBAL MODE: 
        lobby scene [X]  
        GLOBAL MODE: - DONE  
            client [X] -> go back to the menu 
            server [X] -> remove the tcp room 

        choose character scene [X]
        GLOBAL MODE: - DONE 
            client [X] -> go back to menu 
            server [X] -> remove the tcp room 

        choose map scene scene []
        GLOBAL MODE:  
            client [X] -> go back to menu 
            server [X] -> remove the tcp room 

        loading scene  [] -> DO NOTHING FOR NOW  

    FINISH ATTACH NETWORKING CODE TO THE SCENES (2h) [X]  
        which scenes: 
            waiting scene  [X]
            lobby   scene  [X] 
            choose character scene  [X]
            choose map scene scene  [X]
            loading          scene  [X] -> toudp message

    CONVERT PRE-PLAYING SCENES TO USE TCP (2h) [X] 
    CONNECT THE CHOOSE CHARACTER WITH SERVER (2h) [X] 
    PRETTY THE CLIENT'S LOBBY (2h) [X]
    CREATE SOME CLASS THAT HANDLE THE COMMON QUIT MESSAGE (LAN/GLOBAL QUIT) [X]
    MOVE ALL THE SCRIPTS TO SCRIPTS FOLDER (1h) [X]
    MODITFY THE CLIENT TO MATCH WITH THE SERVER (2h) [X] 
    REFACTOR THE CLIENT NETWORKING CODE TO STATIC METHODS IN THE SERVERCONNECTION SINGLETONS (2h) [X] 
    DETECT KHI NAO NGUOI CHOI TAT CONNECTION DE THAO RA KHOI LIST GLOBAL AND LAN MODE [X]
    WAIT TO FINISH THE CHOOSE MAP SCENE [X] (1h)
    PUT THE SOCKET CODE TO THE CHOOSE MAP SCENE [X] (1h) -- gui thong tin chon map cho server
    STANDARDIZE THE MESSAGE SENDING BETWEEN CLIENT AND SERVER  [X] (1h)
    REFACTOR THE STATE MACHINE SYSTEM INTO  CLASSES [X] (3h) -- may be there is something to do with the message format of client/servers
    PUT THE SOCKET CODE TO THE CHOOSE CHARACTER SCENE [X] (1h) -- gui thong tin chon nhan vat cho server
    INSTEAD OF USING PID USE P1, P2, P3,... [X]
    HANDLE THE LOBBY SCENE MESSAGE [X]
    SEND POS [X]
    MATCHING IN GLOBAL[X]
    REFACTOR TO STATE MACHINE [X]

